# -*- coding: utf-8 -*-
"""LVADSUSR148_DeepakSridharanM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YsnWNpNCIrU7VNdQlIsCfboXCDha5l3x
"""

# 1
def calculate(length,breadth):
  area=length*breadth
  if area<1000:
    print("The Area:",area,"Category:Small")
  elif area>=1000 and area<5000:
    print("The Area:",area,"Category:Medium")
  else:
      print("The Area:",area,"Category:Large")

l=int(input("Enter the Length of the propert in meters"))
b=int(input("Enter the Breadth of the property in meters"))
calculate(l,b)

#2
def bmi(weight,height):
  BMI=weight/(height)**2
  if(BMI<15):
    print("BMI:",BMI,"Severe Underweight")
  elif(BMI>=15 and BMI<20):
    print("BMI:",BMI,"Underweight" )
  elif(BMI>=20 and BMI<=25):
    print("BMI:",BMI,"Optimal Weight" )
  else:
      print("BMI:",BMI,"OverWeight" )


weight=float(input("Enter your weight in Kg"))
height=float(input("Enter your height in meter"))
bmi(weight,height)

# 3
class school:
  def __init__(self):
    self.data={}

  def add_student_records(self,student_id,subject,grade):
    if(student_id not in self.data):
      self.data[student_id]=subject
      self.data[student_id][subject]=grade
    else :
      print("!Student Already Exists")

  def update_student_grade(self,student_id,subject,grade):
    if student_id in self.data and subject in self.data[student_id]:
      self.data[student_id][subject]=grade
    else:
      print("No Student Record Found to update")

  def retrieve_student_records(self,student_id,subject):
    if student_id in self.data:
      print("student id:",student_id,"Subject:",self.data[student_id],"Grade:",self.data[student_id][subject])
    else:
      print("!Student record not found")



school_data=school()
school_data.add_student_records(123,'Math',"B")
school_data.add_student_records("243","English","A")
school_data.update_student_grade("243","English","C")
school_data.retrieve_student_records("123","Math")

#4

def content_recomendation(age):
  children_collection=["Toy Story-1","Toy Story -2"]
  teen_collection=["Batman Begins","Spiderman-2"]
  adult_collection=["Wolf of wall street","Shutter island"]
  senior_collection=["Interstellar","Inception"]
  content_Rating="S"
  if(age<=10):
    content_Rating="U"
  elif(age>10 and age<=20):
    content_rating="U/A"
  else:
    content_rating="A"

  if(content_Rating=="U"):
    print("Children Collection Recommended Movies")
    print(children_collection)
  elif(content_Rating=="U/A"):
    print("Teen Recommended Movies")
    print(teen_collection)
  elif(content_Rating=="A"):
    print("Adult Recommended Movies")
    print(adult_collection)
  else:
    print("Senior Recommended Movies")
    print(senior_collection)


age=int(input("Enter Your age : "))
content_recomendation(age)

#5
def subscribers(subscriber_data):
  for id in subscriber_data:
    if(id%2==0):
      print(id,end=" ")
    else:
      pass
data=[123,122,243,246,222,149,148,331,332,424]
print("Even  subscriber ids:")
subscribers(data)

# 6
def pwd():
  password="Hello"
  while(True):
    p=input("Enter your password:")
    if(p==password):
      print("Access Granted")
      break
    else:
      print("!Try Again!")
      continue
pwd()

#7
def calculate_average(survey_data):
    if not survey_data:
        return None
    c=sum(survey_data)/len(survey_data)
    return c
survey_data = list(map(int,input("Enter Number List with space : ").split()))
average = calculate_average(survey_data)
print(f"Average Score {average} .")

# 8
def count_vowel(s):
  count=0
  for i in s:
    if (i=='a' or i=='e' or i=='i'or i=='o' or i=='u'):
      count+=1
  if count<10:
    print("Low Effort or spam comment")
  else:
    print("Not a spam comment")
s=input("Enter your String")
count_vowel(s)

#9

from datetime import datetime
current_date_time=datetime.now()
print(f"The current date and time is {current_date_time}")

# 10

a=int(input("Enter the number-1: "))
b=int(input("Enter the  number-2: "))

def addition(a,b):
  z=a+b
  print(f"the sum of the number is {z}")

def subtraction(a,b):
  z=a-b
  print(f"the difference of the number is {z}")

def division(a,b):
  z=a/b
  print(f"the division of the number is {z}")

def multiply(a,b):
  z=a*b
  print(f"the product of the number is {z}")



addition(a,b)
subtraction(a,b)
division(a,b)
multiply(a,b)

#11
i=int(input("Enter the poll "))
try:
  print(i)
except ValueError:
  print("Invalid input")

# 12
def division(a,b):
  try:
    z=a/b
    print(z)
  except ZeroDivisionError:
    print("Number can't be divided by 0")

n=int(input("Enter the number-1 "))
m=int(input("Enter the  number-2 "))
division(n,m)

# 13
def writting_to_file(filename, content):
    with open(filename, 'w') as file:
        file.write(content)

filename = 'hello_python.txt'
content = 'hello python'

writting_to_file(filename, content)
print(f'Content "{content}" has been written to the file "{filename}".')

#14

file=open('/content/hello_python.txt','r')
reading_from_file=file.readlines()
print(reading_from_file)

# 15
file=open('/content/hello_python.txt','w')
writing_on_file=file.writelines("Hello,Python!")
writing_on_file=file.writelines("I am")
file.close()
file=open('/content/hello_python.txt','r')
reading_from_file=file.readlines()
print(reading_from_file)